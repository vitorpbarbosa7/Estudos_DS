hatvalues(hatfit)
dfbetas(fit)
dfbetas(hatfit)
library(datasets)
data(swiss)
head(swiss)
library(dplyr)
#Criar novas variaveis com a funcao mutate do dplyr
#Variavel binaria
swiss = mutate(swiss, CatholicBin = 1*(Catholic > 50))
swiss$CatholicBin = as.factor(swiss$CatholicBin)
#Plot data
library(tidyverse)
g = ggplot(swiss, aes(x = Agriculture, y = Fertility, colour = CatholicBin)) +
geom_point(size = 6, colour = 'black') + geom_point(size = 4) +
xlab('% in Agriculture') +
ylab('Fertility')
g
# So we can fit a model with Fertility as function of Agriculture and CatholicBin
fit = lm(Fertility ~ Agriculture, data = swiss)
#Extrair intercept and slope from this:
g1 = g
g1 = g1 + geom_abline(intercept = coef(fit)[1], slope = coef(fit)[2], size = 2)
g1
#Adicionnando CatholicBin as independent, sem interacao
fit2 = lm(Fertility ~ Agriculture + CatholicBin, data = swiss)
g2 = g
g2 = g2 + geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[2], size = 2)
g2 = g2 + geom_abline(intercept = coef(fit2)[1] + coef(fit2)[3], slope = coef(fit2)[2], size = 2, colour = 'blue')
g2
#Com termo de interacao entre Agriculture e CatholicBin utilizamos a multiplicacao entre ambos
fit3 = lm(Fertility ~ Agriculture * CatholicBin, data = swiss)
g3 = g
g3 = g3 + geom_abline(intercept = coef(fit3)[1], slope = coef(fit3)[2], size = 2)
g3 = g3 + geom_abline(intercept = coef(fit3)[1] + coef(fit3)[3], slope = coef(fit3)[2] + coef(fit3)[4], size = 2, colour = 'red')
g3
# 1 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit = lm(mpg ~ cyl + wt, data = data)
summary(fit)
library(tidyverse)
# Da mudanca esperada de carros com cilindros de 4 e cilindros de 8, tem-se uma mudanca
#de -6,0709, a qual corresponde a diferenca de media entre os dois
g = ggplot(data = data, aes(y = mpg, x = cyl)) +
geom_point()
g2 = ggplot(data = data, aes(y = mpg, x = wt)) +
geom_point(aes(fill = cyl, color = cyl))
g2
# 2 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit2 = lm(mpg ~ cyl + wt, data = data)
summary(fit2)
g2 = g2 + geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[4], color = 'red')
g2 = g2 + geom_abline(intercept = coef(fit2)[1] + coef(fit2)[2], slope = coef(fit2)[4], color = 'green')
g2 = g2 + geom_abline(intercept = coef(fit2)[1] + coef(fit2)[3], slope = coef(fit2)[4], color = 'blue')
g2
#Realizar o fit com o 4 sem ser a referencia, assim ele literalmente traz a media dos tres, muito lindo
fit2semreferencia = lm(mpg ~ wt + cyl - 1, data = data)
summary(fit2semreferencia)
fit3 = lm(mpg ~ cyl, data = data)
summary(fit3)
g3 = ggplot(data = data, aes(y = mpg, x = cyl)) +
geom_point()
g3
g3 = g3 + geom_abline(intercept = coef(fit3)[1], slope = 0, color = 'black')
g3 = g3 + geom_abline(intercept = coef(fit3)[1] + coef(fit3)[2],slope = 0, color = 'red')
g3 = g3 + geom_abline(intercept = coef(fit3)[1] + coef(fit3)[3], slope = 0, color = 'green')
g3
#Coloquei alternativa
# Holding weight constant, cylinder appears to have more of an impact on mpg than if weight is disregarded.
# 3 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit4 = lm(mpg ~ cyl + wt, data = data)
fit5 = lm(mpg ~ cyl*wt, data = data)
summary(fit4)
summary(fit5)
# 2 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit2 = lm(mpg ~ cyl + wt, data = data)
summary(fit2)
g2 = g2 + geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[4], color = 'red')
g2 = g2 + geom_abline(intercept = coef(fit2)[1] + coef(fit2)[2], slope = coef(fit2)[4], color = 'green')
g2 = g2 + geom_abline(intercept = coef(fit2)[1] + coef(fit2)[3], slope = coef(fit2)[4], color = 'blue')
g2
#Realizar o fit com o 4 sem ser a referencia, assim ele literalmente traz a media dos tres, muito lindo
fit2semreferencia = lm(mpg ~ wt + cyl - 1, data = data)
summary(fit2semreferencia)
fit3 = lm(mpg ~ cyl, data = data)
summary(fit3)
g3 = ggplot(data = data, aes(y = mpg, x = cyl)) +
geom_point()
g3
g3 = g3 + geom_abline(intercept = coef(fit3)[1], slope = 0, color = 'black')
g3 = g3 + geom_abline(intercept = coef(fit3)[1] + coef(fit3)[2],slope = 0, color = 'red')
g3 = g3 + geom_abline(intercept = coef(fit3)[1] + coef(fit3)[3], slope = 0, color = 'green')
g3
# 2 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit2 = lm(mpg ~ cyl + wt, data = data)
summary(fit2)
#wt constante
fit3 = lm(mpg ~ cyl, data = data)
summary(fit3)
# 4
data = mtcars
data$cyl = as.factor(data$cyl)
fit6 = lm(mpg ~ I(wt * 0.5) + factor(cyl), data = data)
summary(fit6)
anova(fit4, fit5)
# 1 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit = lm(mpg ~ cyl + wt, data = data)
summary(fit)
library(tidyverse)
# Da mudanca esperada de carros com cilindros de 4 e cilindros de 8, tem-se uma mudanca
#de -6,0709, a qual corresponde a diferenca de media entre os dois
g = ggplot(data = data, aes(y = mpg, x = cyl)) +
geom_point()
g2 = ggplot(data = data, aes(y = mpg, x = wt)) +
geom_point(aes(fill = cyl, color = cyl))
g2
# 2 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit2 = lm(mpg ~ cyl + wt, data = data)
summary(fit2)
g2 = g2 + geom_abline(intercept = coef(fit2)[1], slope = coef(fit2)[4], color = 'red')
g2 = g2 + geom_abline(intercept = coef(fit2)[1] + coef(fit2)[2], slope = coef(fit2)[4], color = 'green')
g2 = g2 + geom_abline(intercept = coef(fit2)[1] + coef(fit2)[3], slope = coef(fit2)[4], color = 'blue')
g2
summary(fit2)
# 2 -----------------------------------------------------------------------
data = mtcars
data$cyl = as.factor(data$cyl)
fit2 = lm(mpg ~ cyl + wt, data = data)
summary(fit2)
summary(fit3)
library(swirl)
swirl()
rpg1()
rpg1
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility ~ ., data = swiss)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data = swiss)
vif(mdl2)
library(swirl)
swirl()
View(ravenData)
mdl <- glm(ravenWinNum ~ ravenScore, family = 'binomial', data = ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(gml)
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95, 1)
var(rpois(1000, 50))
View(hits)
class(hits[,'date'])
as.integer(head(hits[,'date']))
mdl <- glm(visits ~ date, family = 'poisson', data = hits)
summary(mdl)
exp(confint(mdl, 'date'))
which.max(hits[,'visits'])
hits[704,]
lambda <- mdl$fitted.values[704]
qpois(.95, lambda)
mdl2 <- glm(visits ~ date, family = 'poisson', offset = log(visits + 1), data = ravenData)
mdl2 <- glm(visits ~ date, family = 'poisson', offset = log(visits + 1), data = hits)
mdl2 <- glm(simplystats ~ date, family = 'poisson', offset = log(visits + 1), data = hits)
qpois(0.95, mdl$fitted.values[704])
qpois(.95, mdl2$fitted.values[704])
library(MASS)
?shuttle
data = shuttle
View(data)
lr = glm(use ~ sign, family = 'binomial', data = data)
summary(lr)
library(MASS)
?shuttle
data = shuttle
View(data)
lr = glm(use ~ wind, family = 'binomial', data = data)
summary(lr)
coef(lr)
exp(coef(lr)[2])
#2
lr2 = glm(use ~ magn, family = 'binomial', data = data)
summary(lr2)
coef(lr2)
exp(coef(lr2))
#3
model1 = glm(use ~ wind, family = 'binomial', data = data)
model2 = glm((use-1) ~ wind, family = 'binomial', data = data)
#3
model1 = glm(use ~ wind, family = 'binomial', data = data)
model2 = glm((1-use)~ wind, family = 'binomial', data = data)
model2 = glm(1-use~ wind, family = 'binomial', data = data)
model2 = glm(1-auto~ wind, family = 'binomial', data = data)
#4
data2 = InsectSprays
View(data2)
poisson1 = glm(count ~ spray, family = 'poisson', data = data2)
summary(poisson1)
exp(coef(poisson1)[2])
exp(coef(poisson1)[1])/exp(coef(poisson1)[2])
#4
data2 = InsectSprays
View(data2)
data2$spray = relevel(data2$spray, ref = 'B')
poisson1 = glm(count ~ spray, family = 'poisson', data = data2)
summary(poisson1)
levels(data2$spray)
poisson1 = glm(count ~ spray, family = 'poisson', data = data2)
summary(poisson1)
exp(coef(poisson1)[2])
exp(coef(poisson1)[2])
library(MASS)
?shuttle
data = shuttle
levels(data$wind)
library(MASS)
?shuttle
data = shuttle
levels(data$wind)
data$wind = relevel(data$wind, ref = 'tail')
levels(data$wind)
View(data)
lr = glm(use ~ wind, family = 'binomial', data = data)
summary(lr)
coef(lr)
exp(coef(lr)[2])
levels(data$wind)
#2
levels(data)
#2
levels(data$wind)
lr2 = glm(wind ~ magn, family = 'binomial', data = data)
summary(lr2)
coef(lr2)
exp(coef(lr2))
#6
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
data = mtcars
View(data)
class(data)
summary(data)
ggplot(data, aes(x = cyl, y = mpg)) +
geom_boxplot(aes(color = cyl))
library(tidyverse)
ggplot(data, aes(x = cyl, y = mpg)) +
geom_boxplot(aes(color = cyl))
ggplot(data, aes(x = factor(cyl), y = mpg)) +
geom_boxplot(aes(color = cyl))
geom_boxplot(aes(fill = factor(cyl), alpha = 0.7)
ggplot(data, aes(x = factor(cyl), y = mpg)) +
geom_boxplot(aes(fill = factor(cyl), alpha = 0.7))
ggplot(data, aes(x = factor(cyl), y = mpg)) +
geom_boxplot(aes(fill = factor(cyl)), alpha = 0.7)
ggplot(data, aes(x = factor(cyl), y = mpg)) +
geom_boxplot(aes(fill = factor(cyl)), alpha = 0.3)
#Carros que possuem menos cilindros possuem maior eficiencia, consequentemente fazem mais
ggplot(data, aes(x = factor(cyl), y = mpg)) +
geom_boxplot(aes(fill = factor(cyl)), alpha = 0.3) +
theme_bw()
ggplot(data, aes(x = factor(cyl), y = hp)) +
geom_boxplot(aes(fill = factor(cyl)), alpha = 0.3) +
theme_bw()
ggplot(data, aes(x = factor(cyl), y = qsec)) +
geom_boxplot(aes(fill = factor(cyl)), alpha = 0.3) +
theme_bw()
ggplot(data, aes(x = factor(am), y = mpg)) +
geom_boxplot(aes(fill = factor(cyl)), alpha = 0.3) +
theme_bw()
ggplot(data, aes(x = factor(am), y = mpg)) +
geom_boxplot(aes(fill = factor(am)), alpha = 0.3) +
theme_bw()
anova(mpg ~ factor(am), data = data)
t.test(mpg ~ factor(am), data = data)
#Regressao logistica para modelar mpg em funcao do regressor categórico binário am
glm(mpg ~ am, family = 'binomial', data = data)
#Regressao logistica para modelar mpg em funcao do regressor categórico binário am
lr = glm(mpg ~ factor(am), family = 'binomial', data = data)
#Regressao logistica para modelar mpg em funcao do regressor categórico binário am
lr = glm(am ~ mpg, family = 'binomial', data = data)
summary(lr)
plot(lr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
### T test to asses the statistical difference from the two means
library(tidyverse)
library(dplyr)
data = mtcars
average = data %>%
group_by(am) %>%
summarise_at(vars(mpg), list(name = mean))
names(average) = c('am','mean')
average$mean = round(average$mean, 2)
ggplot(data, aes(x = factor(am), y = mpg)) +
geom_boxplot(aes(fill = factor(am)), alpha = 0.3) +
geom_text(data = average, aes(label = mean, y = mean), size = 4)
```{r ttest, echo = FALSE, include = FALSE, message = FALSE}
t.test(mpg ~ factor(am), data = data)
t.test(mpg ~ factor(am), data = data)
#### Since the p-value is 0.001374, with 5 % significance level it is possible to reject the Null Hypothesis of means equality, proving a influence from transmission over fuel efficiency
#Linear Regression Model
```{r linearregression, echo = FALSE, message = FALSE}
lm = lm(mpg ~ factor(am), data = data)
summary(lm)
lm = lm(mpg ~ factor(am), data = data)
summary(lm)
```{r linearregression, echo = FALSE, message = FALSE}
#### The Pr(>|t|) corresponds to the coefficient p-values, in which we can verify that both are significant with 1 % significance level
#### Besides that, it is also necessary to verify the beta1 confidence level:
```{r confidencelevel, echo = FALSE, message = FALSE}
confint(lm, level = .95)[2,]
confint(lm, level = .95)[2,]
#### As printed above, with 95 % confidence level, it's possible to verify increases in fuel efficiency from 3.64 to 10.84, due to car's transmission type presented.
#### Correlation plot to asses the variable relationships
```{r corrplot, echo = FALSE, message = FALSE}
library(corrplot)
corrplot(cor(data))
corrplot(cor(data))
corrplot(cor(data))
##### The VIF analysis is executed to help in deciding which variables should be used in a multivariate regression analysis
```{r vif, echo = FALSE, message = FALSE}
data$cyl = as.factor(data$cyl)
data$vs = as.factor(data$vs)
data$am = as.factor(data$am)
data$gear = as.factor(data$gear)
data$carb = as.factor(data$carb)
lmvif = lm(mpg ~ ., data = data)
library(car)
vif(lmvif)
View(data)
mlm = lm(mpg ~ am + qsec + vs + gear + carb + drat, data = data)
summary(mlm)
data = mtcars
lmvif = lm(mpg ~ ., data = data)
library(caret)
library(car)
vif(lmvif)
mlm = lm(mpg ~ am + drat + vs, data = data)
summary(mlm)
mlm2 = lm(mpg ~ am + qsec + vs, data = data)
mlm2 = lm(mpg ~ am + qsec + vs, data = data)
summary(mlm2)
#am, drat and vs
mlm = lm(mpg ~ am + drat + vs, data = data)
#am, drat and vs
mlm = lm(mpg ~ am + drat + vs, data = data)
summary(mlm)
#qsec, vs and am
mlm2 = lm(mpg ~ am + qsec + vs, data = data)
summary(mlm2)
#qec, wt and am
mlm3 = lm(mpg ~ am + wt + qsec, data = data)
summary(mlm3)
confint(coef(mlm3))[2,]
confint(mlm3, level = .95)[2,]
anova(lm, mlm3)
anova(lm, mlm3)
anova(lm, mlm3)
# Residual plot
```
par(mfrow = c(2,2))
plot(mlm3)
```
# Residual plot
```{r residual, echo = FALSE, message = FALSE, include = FALSE}
par(mfrow = c(2,2))
plot(mlm3)
par(mfrow = c(2,2))
plot(mlm3)
mean(resid(mlm3))
plot(mlm3)
mean(resid(mlm3))
a = summary(mlm3)
View(mlm3)
---
title: "Motor Trend US 1974 Magazine Analysis"
author: "Vitor Pereira Barbosa"
date: "10/21/2020"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# 1 - Introduction
##### This report bring valuable information about how manual or automatic transmission can influence the fuel efficiency from cars. The dataset comprises data from the year of 1974, with 10 different aspects of design and engineering from 32 automobiles.
# 2 - Summary
### The analysis is performed as follows:
#### - Exploratory Data Analysis with visual tools to asses the difference in fuel efficienty due to the automatic or manual transmission
#### - Use of Hypoteshis test the show the difference statistical significance
#### - Simple Linear Regression and Multivariate Linear Regression to quantify how much automatic or manual tranmission affects the car's fuel efficiency
# 3 - Automatic or manual transmission influence over MPG
## Exploratory Data Analysis
### As we can see from the chart below, there is a visual difference in mpg when comparing
automatic (am = 0) and manual (am=1) transmission. The median and mean from mpg is higher in manual than in automatic transmission.
```{r EDA, echo = FALSE, message = FALSE}
library(tidyverse)
library(dplyr)
data = mtcars
average = data %>%
group_by(am) %>%
summarise_at(vars(mpg), list(name = mean))
names(average) = c('am','mean')
average$mean = round(average$mean, 2)
ggplot(data, aes(x = factor(am), y = mpg)) +
geom_boxplot(aes(fill = factor(am)), alpha = 0.3) +
geom_jitter() +
geom_text(data = average, aes(label = mean, y = mean), size = 4) +
ylab("Fuel efficiency") +
xlab("Automatic or manual transmission engine") +
ggtitle("Fuel efficiencty as function of automatic or manual tranmission engine")
```
### T test to asses the statistical difference from the two means
```{r ttest, echo = FALSE, message = FALSE}
t.test(mpg ~ factor(am), data = data)
```
#### Since the p-value is 0.001374, with 5 % significance level it is possible to reject the Null Hypothesis of means equality, proving a influence from transmission over fuel efficiency
# 4 - Linear Regression Model
```{r linearregression, echo = FALSE, message = FALSE}
lm = lm(mpg ~ factor(am), data = data)
summary(lm)
```
#### From the summary presented above, it is possible to verify that the beta0 coefficient (Intercept) represents the average value of mpg from automatic transmission (am = 0) and the beta1 coefficient (factor(am)1) represents the expected increase in mpg from using manual transmission in relation to automatic transmission.
#### The Pr(>|t|) corresponds to the coefficient p-values, in which we can verify that both are significant with 1 % significance level
#### Besides that, it is also necessary to verify the beta1 confidence level:
```{r confidencelevel, echo = FALSE, message = FALSE}
confint(lm, level = .95)[2,]
```
#### As printed above, with 95 % confidence level, it's possible to verify increases in fuel efficiency from 3.64 to 10.84, due to car's transmission type presented.
## Variance Inflation Factor Analysis
##### The VIF analysis is executed to help in deciding which variables should be used in a multivariate regression analysis
```{r vif, echo = FALSE, message = FALSE}
data = mtcars
lmvif = lm(mpg ~ ., data = data)
library(car)
vif(lmvif)
```
## The Multivariate Linear Regression was executed several times, with three differents sets of regressors:
```{r multivariate, message = FALSE}
#am, drat and vs
mlm = lm(mpg ~ am + drat + vs, data = data)
summary(mlm)
#qsec, vs and am
mlm2 = lm(mpg ~ am + qsec + vs, data = data)
summary(mlm2)
#qec, wt and am
mlm3 = lm(mpg ~ am + wt + qsec, data = data)
summary(mlm3)
```
#### As we can see, only in the third model, using "qsec", "wt" and "am" as regressors the p-values are relevant with 5 % significance level. It is also possible to verify the confidence level from "am" coefficient
##### With "qsec" and "wt" included in the regression, the effect of "am" is reduced, but still relevant, with 0.05 to 5.83 increase in mpg with 95 % confidence level.
```{r newam_conf, echo=FALSE, message = FALSE}
confint(mlm3, level = .95)[2,]
```
# 5 - Comparing models
#### The ANOVA analysis allows the comparison between two models, in that case to asses the difference of a new model with 3 regressors in respect of a model with only one regressor.
```{r compare, echo=FALSE, message = FALSE}
anova(lm, mlm3)
```
#### As presented, the second model is really different from the first one (p-value of 1.55e-09)
# 6 - Residual plot
```{r residual, echo = FALSE, message = FALSE}
par(mfrow = c(2,2))
plot(mlm3)
```
#### Residual average value (Check Gauss-Markov assumption of linear regression)
```{r residual_mean, echo = FALSE, message = FALSE}
mean(resid(mlm3))
```
#### • Looking at the residual plots chart, the first one on the right shows a random data distribuition, and calculating the residual mean, the value is 8.8500145e-17, which respects the Gauss-Markov assumption of linear regression of residual mean value of zero.
#### • The Quantile-Quantile plot is satisfactory with only a slighly deviation at the far left and far right sides.
#### • In fact the Standardized residuals plot shows a slighly systematically distribuition which was not explained by the model
#### • In the Residuals vs Leverage plot, there are two cars with leverage values above 0.25
# 7 - Conclusion
##### The manual transmission is better for fuel efficiency and it is possible to quantify how much it influences the "mpg" variable, with only one variable (the "am" regressor), affecting from 3.64 to 10.85 and also with the weight ("wt") and acceleration measure ("qsec") affecting from 0.05 to 5.83.
summary(mlm3)
a = summary(mlm3)
a
a$coefficients
data = mtcars
library(corrplot)
corrplot(cor(data))
data = read.csv('data.csv')
setwd('C:/GD/DS/DS_Share/Github/RegressaoLinear/Covariavel')
data = read.csv('data.csv')
View(data)
fit1 = lm(formula = Resistencia ~ Diametro, data = data)
summary(fit1)
plot(data$Resistencia, data$Diametro)
plot(fit1)
names(data)[1] = 'Maquina'
fit2 = lm(formula = Resistencia ~ Diametro + Maquina, data = data)
summary(fit2)
fit3 = lm(formula = Resistencia ~ Diametro + Maquina + Diametro*Resistencia)
fit3 = lm(formula = Resistencia ~ Diametro + Maquina + Diametro*Resistencia, data = data)
fit3 = lm(formula = Resistencia ~ Diametro + Maquina + Diametro*Maquina, data = data)
summary(fit3)
summary(fit2)
